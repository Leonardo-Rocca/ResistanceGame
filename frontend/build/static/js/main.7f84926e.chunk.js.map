{"version":3,"sources":["components/newGameForm.js","components/NewOrJoinElection.js","model/GameClient.js","components/BeginForm.js","components/CharacterInfo.js","components/JoinForm.js","components/Players.js","App.js","serviceWorker.js","index.js"],"names":["NewGameForm","props","inputName","React","createRef","className","style","display","flexDirection","htmlFor","required","id","aria-describedby","name","inputRef","to","onClick","onCreate","current","value","variant","color","type","NewOrJoinGame","GameClient","playerName","host","createGame2","fetch","method","headers","createGame","body","joinGame","game","getCharacterInfo","startGame","player","start","useStyles","makeStyles","theme","root","palette","text","primary","icon","margin","spacing","fontSize","classes","characterInfo","console","log","Player","Name","Character","aria-label","placeholder","JSON","stringify","Info","inputGame","join","component","players","map","customHistory","createBrowserHistory","App","useState","state","setState","then","resp","json","r","data","Players","push","Admin","position","src","alt","height","maxWidth","history","exact","path","render","JoinForm","BeginForm","CharacterInfo","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4RASe,SAASA,EAAYC,GAKhC,IAAMC,EAAUC,IAAMC,YAEtB,OACA,yBAAKC,UAAU,2BACX,sCACQ,yBAAKC,MAAO,CAACC,QAAS,OAAQC,cAAe,UAAYH,UAAU,wCAC/D,kBAAC,IAAD,CAAYI,QAAQ,YAApB,UACA,kBAAC,IAAD,CAAOC,UAAQ,EAACC,GAAG,UAAUC,mBAAiB,iBAAiBC,KAAK,SAC7DC,SAAUZ,IAEjB,6BACA,kBAAC,IAAD,CAAMa,GAAG,WAAYC,QAAS,kBAAIf,EAAMgB,SAASf,EAAUgB,QAAQC,SACnE,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC1BC,KAAK,SAASjB,UAAU,0BADhC,Y,sCCpBL,SAASkB,IAEpB,OACI,yBAAKlB,UAAU,2BACX,kBAAC,IAAD,CAAKE,QAAQ,QACT,kBAAC,IAAD,CAAMQ,GAAG,QAAT,IAAiB,kBAAC,IAAD,CAAQK,QAAQ,YAAYC,MAAM,WAAlC,WAGjB,kBAAC,IAAD,CAAMN,GAAG,SAAT,IAAkB,kBAAC,IAAD,mB,qDCXnB,SAAUS,EAAWC,GAEhC,IAAIC,EAIJ,OAHAA,EAAO,wBAGA,CAEHC,YAFG,WAGC,OAAOC,MAAMF,EAAO,SAAW,CAC3BG,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,QAK3CC,WAZG,WAaC,OAAOH,MAAMF,EAAK,iBAAiBD,EAAY,CAC3CI,OAAQ,OACRG,KAAM,GACNF,QAAS,CACL,eAAgB,mBAChB,8BAA+B,QAI3CG,SAtBG,SAsBMC,GACL,OAAON,MAAMF,EAAK,UAAUQ,EAAK,YAAYT,EAAY,CACrDI,OAAQ,OACRG,KAAM,GACNF,QAAS,CACL,eAAgB,mBAChB,8BAA+B,QAI3CK,iBAhCG,SAgCcD,GACb,OAAON,MAAMF,EAAK,SAASQ,EAAK,YAAYT,EAAW,aAAc,CACjEI,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,QAI3CM,UAzCG,SAyCOzB,GACN,OAAOiB,MAAMF,EAAK,cAAcf,EAAI,CAChCkB,OAAQ,OACRG,KAAM,GACNF,QAAS,CACL,eAAgB,mBAChB,8BAA+B,S,YCnDpC,WAAU7B,GACrB,OAAyB,yCACXA,EAAMoC,OAChB,6BAFqB,YAGXpC,EAAMiC,KAChB,6BAEA,kBAAC,IAAD,CAAMnB,GAAG,kBAAkBC,QAASf,EAAMqC,OAC1C,kBAAC,IAAD,CAAQlB,QAAQ,YAAYC,MAAM,WAAlC,e,2CCLFkB,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFrB,MAAOoB,EAAME,QAAQC,KAAKC,SAE9BC,KAAM,CACFC,OAAQN,EAAMO,QAAQ,GACtBC,SAAU,OAIH,WAAUhD,GACrB,IAAMiD,EAAUX,IAEZY,EAAclD,EAAMkD,cAGxB,OAHsCC,QAAQC,IAAIF,GAG7CA,EAEoB,6BACpBA,EAAcG,OAAOC,KACtB,6BAFqB,cAGRJ,EAAcK,UAE3B,6BAEA,6BACI,kBAAC,IAAD,CAAkBC,aAAW,iBAAiBC,YAAcC,KAAKC,UAAUT,EAAcU,QAD7F,IAGI,kBAAC,IAAD,CAAM9C,GAAG,IAAIC,QAASf,EAAMqC,OACxB,kBAAC,IAAD,CAAYjC,UAAW6C,EAAQJ,UAbhB,qDClBhB,WAAU7C,GACrB,IAAMC,EAAUC,IAAMC,YAChB0D,EAAU3D,IAAMC,YAGtB,OACA,yBAAKC,UAAU,2BACX,uCACA,yBAAKC,MAAO,CAACC,QAAS,OAAQC,cAAe,UAAYH,UAAU,wCAC/D,kBAAC,IAAD,CAAYI,QAAQ,QAApB,WACA,kBAAC,IAAD,CAAOC,UAAQ,EAACC,GAAG,OAAOC,mBAAiB,iBAAiBC,KAAK,OAAOS,KAAK,SACtER,SAAUgD,IAEjB,kBAAC,IAAD,CAAYrD,QAAQ,YAApB,UACA,kBAAC,IAAD,CAAOC,UAAQ,EAACC,GAAG,UAAUC,mBAAiB,iBAAiBC,KAAK,SAC7DC,SAAUZ,IAEjB,6BACA,kBAAC,IAAD,CAAMa,GAAG,WAAYC,QAAS,kBAAIf,EAAM8D,KAAK7D,EAAUgB,QAAQC,MAAM2C,EAAU5C,QAAQC,SACnF,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC1BC,KAAK,SAASjB,UAAU,0BADhC,c,mDChBD,WAAUJ,GACrB,OACI,yBAAKI,UAAU,2BAEX,kBAAC,IAAD,CAAM2D,UAAU,MAAMP,aAAW,wBAC5BxD,EAAMgE,QAAQC,IAAI,SAAA7B,GACf,OAAe,kBAAC,IAAD,KACNA,EAAOkB,SAIxB,kBAAC,IAAD,CAAMxC,GAAG,kBAAkBC,QAASf,EAAMkC,kBACtC,kBAAC,IAAD,S,mjBCLhB,IAAMgC,EAAgBC,cA8DPC,MA5Df,WAAgB,IAAD,EACelE,IAAMmE,SAAS,CAACjC,OAAQ,GAAIH,KAAM,GAAGiB,cAAc,GAAGc,QAAQ,KAD7E,mBACJM,EADI,KACGC,EADH,KAGPzC,EAAa,SAAClB,GAAD,OACbW,EAAWX,GAAMkB,aAAa0C,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAQF,KAAK,SAAAG,GAAMxB,QAAQC,IAAIuB,GAAGJ,EAAS,CAACnC,OAAQxB,EAAMqB,KAAM0C,EAAEC,UAElHzC,EAAY,kBACZZ,EAAW+C,EAAMlC,QAAQD,UAAUmC,EAAMrC,MAAMuC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAQF,KAAK,SAAAG,GAAC,OAAIJ,EAAS,EAAD,GAAKD,EAAL,CACvFlC,OAAQkC,EAAMlC,OAAQH,KAAMqC,EAAMrC,KAAKiB,cAAcyB,EAAEC,WAE3D1C,EAAmB,kBACnBX,EAAW+C,EAAMlC,QAAQF,iBAAiBoC,EAAMrC,MAAMuC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAQF,KAAK,SAAAG,GAAC,OAClFJ,EAAS,EAAD,GAAKD,EAAL,CAAYpB,cAAeyB,EAAEC,WAGzC5C,EAAW,SAACI,EAAOH,GAAR,OAAiBV,EAAWa,GAAQJ,SAASC,GAAMuC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAC/EF,KAAK,SAAAG,GAAMxB,QAAQC,IAAIuB,GAAWA,EAAEC,KAAKC,QAAYC,KAAKH,EAAEC,KAAKG,OAAQR,EAAS,CAACnC,OAAQA,EAAQH,KAAMA,EAAK+B,QAAQW,EAAEC,KAAKC,aAGlI,OACI,yBAAKzE,UAAU,OACX,kBAAC,IAAD,CAAQ4E,SAAS,UACb,kBAAC,IAAD,CAAY7D,QAAQ,MAApB,sBAMJ,yBACI8D,IAAI,sNACJC,IAAI,OAAOC,OAAO,UACtB,kBAAC,IAAD,CAAWC,SAAS,MAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAASnB,IACjB,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIxB,UAAWzC,IACjC,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,OAAOC,OAAQ,SAAAxF,GAAK,OAClC,kBAACD,EAAD,iBAAkBC,EAAlB,CAAyBgB,SAAUc,QAEtC,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAAxF,GAAK,OACtC,mDAAwB,kBAAC6E,EAAD,CAASb,QAASM,EAAMN,QAAS9B,iBAAkBA,QAE/E,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,QAAQC,OAAQ,SAAAxF,GAAK,OACpC,kBAACyF,EAAD,iBAAczF,EAAd,CAAqB8D,KAAM9B,QAI/B,kBAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAAxF,GAAK,OACtC,kBAAC0F,EAAD,iBAAgB1F,EAAhB,CAAuBiC,KAAMqC,EAAMrC,KAAMG,OAAQkC,EAAMlC,OAAQC,MAAOF,QAE1E,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,SAAAxF,GAAK,OAC7C,kBAAC2F,EAAD,iBAAoB3F,EAApB,CAA2BkD,cAAeoB,EAAMpB,wBCxDpD0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAST,OAAO,kBAAC,EAAD,MAASU,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,KAAK,SAAA+B,GACjCA,EAAaC,gB","file":"static/js/main.7f84926e.chunk.js","sourcesContent":["import React from 'react';\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box/Box\";\n\nexport default function NewGameForm(props) {\n\n    // <form method=\"post\" action=\"/game/players/name\" id=\"newForm\">\n    //   </form> \" changeFormUrl('/game/players/{1}','newForm','newName','')\"\n\n    const inputName=React.createRef();\n\n    return(\n    <div className=\"d-flex p-2 bd-highlight\">\n        <h2> Nueva</h2>\n                <div style={{display: 'flex', flexDirection: 'column',}} className=\"d-flex flex-column bd-highlight mb-3\">\n                    <InputLabel htmlFor=\"newNamet\">Nombre</InputLabel>\n                    <Input required id=\"newName\" aria-describedby=\"my-helper-text\" name=\"player\"\n                           inputRef={inputName}/>\n\n                    <br/>\n                    <Link to=\"/newGame\"  onClick={()=>props.onCreate(inputName.current.value)}>\n                    <Button variant=\"contained\" color=\"primary\"\n                            type=\"submit\" className=\"btn btn-lg btn-primary\">\n                        Crear\n                    </Button>\n                    </Link>\n                </div>\n\n        </div>);\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Box from \"@material-ui/core/Box/Box\";\n\n\nexport default function NewOrJoinGame() {\n\n    return (\n        <div className=\"d-flex p-2 bd-highlight\">\n            <Box display=\"flex\">\n                <Link to=\"/new\"> <Button variant=\"contained\" color=\"primary\">\n                    Nueva </Button>\n                </Link>\n                <Link to=\"/join\"> <Button>\n                    Unirse </Button>\n                </Link>\n            </Box>\n        </div>);\n}","\nimport Config from '../config.json'\n\nexport default function  GameClient(playerName) {\n\n    let host = 'http:/om/';\n    host = \"http://localhost:5000\"\n  //  host = Config.host\n\n    return {\n\n        createGame2() {\n            return fetch(host + '/Games' , {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }\n        ,\n        createGame(){\n            return fetch(host+'/game/players/'+playerName, {\n                method: 'POST',\n                body: {},//JSON.stringify(playerName),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }        ,\n        joinGame(game){\n            return fetch(host+'/Games/'+game+'/players/'+playerName, {\n                method: 'POST',\n                body: {},//JSON.stringify(playerName),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }      ,\n        getCharacterInfo(game){\n            return fetch(host+'/game/'+game+'/players/'+playerName+'/character', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }       ,\n        startGame(id){\n            return fetch(host+'/startGame/'+id, {\n                method: 'POST',\n                body: {},//JSON.stringify(playerName),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }\n    }\n\n}","import React from 'react';\nimport Button from \"@material-ui/core/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box/Box\";\n\nexport default function (props) {\n    return                   <div>\n        Jugador: {props.player}\n        <br/>\n        Partida: {props.game}\n        <br/>\n\n        <Link to=\"/game/character\" onClick={props.start}>\n        <Button variant=\"contained\" color=\"primary\" >\n            Comenzar\n        </Button>\n        </Link>\n\n    </div>\n}","import React from 'react';\nimport Button from \"@material-ui/core/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box/Box\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize/TextareaAutosize\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        color: theme.palette.text.primary,\n    },\n    icon: {\n        margin: theme.spacing(1),\n        fontSize: 32,\n    },\n}));\n\nexport default function (props) {\n    const classes = useStyles();\n\n    let characterInfo=props.characterInfo;console.log(characterInfo)\n//    Partida: {props.game}\n\n    if (!characterInfo) return <div>Partida no empezada</div>\n    // data: {Character: \"SERVANT\", Player: {ID: 18, Name: \"leo\"}, Info: {}}\n    return                   <div>\n        {characterInfo.Player.Name}\n        <br/>\n         Personaje: {characterInfo.Character}\n\n        <br/>\n\n        <div>\n            <TextareaAutosize aria-label=\"empty textarea\" placeholder={ JSON.stringify(characterInfo.Info)} />;\n\n            <Link to=\"/\" onClick={props.start}>\n                <DeleteIcon className={classes.icon} />\n            </Link>\n\n        </div>\n    </div>\n}","import React from 'react';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nexport default function (props) {\n    const inputName=React.createRef();\n    const inputGame=React.createRef();\n\n\n    return(\n    <div className=\"d-flex p-2 bd-highlight\">\n        <h2> Unirse</h2>\n        <div style={{display: 'flex', flexDirection: 'column',}} className=\"d-flex flex-column bd-highlight mb-3\">\n            <InputLabel htmlFor=\"game\">Partida</InputLabel>\n            <Input required id=\"game\" aria-describedby=\"my-helper-text\" name=\"game\" type=\"number\"\n                   inputRef={inputGame}/>\n\n            <InputLabel htmlFor=\"newNamet\">Nombre</InputLabel>\n            <Input required id=\"newName\" aria-describedby=\"my-helper-text\" name=\"player\"\n                   inputRef={inputName}/>\n\n            <br/>\n            <Link to=\"/waiting\"  onClick={()=>props.join(inputName.current.value,inputGame.current.value)}>\n                <Button variant=\"contained\" color=\"primary\"\n                        type=\"submit\" className=\"btn btn-lg btn-primary\">\n                    Unirse\n                </Button>\n            </Link>\n        </div>\n\n    </div>);\n}\n","import React from 'react';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nexport default function (props) {\n    return(\n        <div className=\"d-flex p-2 bd-highlight\">\n\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                {props.players.map(player=> {\n                    return         <ListItem >\n                            {player.Name}\n                    </ListItem>\n                        })}\n            </List>\n            <Link to=\"/game/character\" onClick={props.getCharacterInfo}>\n                <ChevronRightIcon  />\n\n            </Link>\n        </div>);\n}\n","import React from 'react';\nimport './App.css';\nimport NewGameForm from \"./components/newGameForm\";\nimport Container from \"@material-ui/core/Container/Container\";\nimport NewOrJoinGame from \"./components/NewOrJoinElection\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport {createBrowserHistory} from \"history\";\nimport GameClient from \"./model/GameClient\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport BeginForm from \"./components/BeginForm\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize/TextareaAutosize\";\nimport CharacterInfo from \"./components/CharacterInfo\";\nimport JoinForm from \"./components/JoinForm\";\nimport Players from \"./components/Players\";\n\nconst customHistory = createBrowserHistory();\n\nfunction App() {\n    const [state, setState] = React.useState({player: '', game: '',characterInfo:{},players:[]});\n\n    let createGame = (name) =>\n        GameClient(name).createGame().then(resp => resp.json()).then(r => {console.log(r);setState({player: name, game: r.data})});\n\n    let startGame = () =>\n        GameClient(state.player).startGame(state.game).then(resp => resp.json()).then(r => setState({...state,\n            player: state.player, game: state.game,characterInfo:r.data }));\n\n    let getCharacterInfo = () =>\n        GameClient(state.player).getCharacterInfo(state.game).then(resp => resp.json()).then(r =>\n            setState({...state, characterInfo: r.data}     ));\n\n\n    let joinGame = (player,game)=>  GameClient(player).joinGame(game).then(resp => resp.json())\n        .then(r => {console.log(r);let all=r.data.Players;all.push(r.data.Admin); setState({player: player, game: game,players:r.data.Players})});\n\n\n    return (\n        <div className=\"App\">\n            <AppBar position=\"static\">\n                <Typography variant=\"h6\">\n                    Resistance Avalon\n                </Typography>\n\n            </AppBar>\n\n            <img\n                src=\"https://ksr-ugc.imgix.net/assets/011/406/830/6384907307c62d307d774d5f8d2107f6_original.jpg?ixlib=rb-2.1.0&crop=faces&w=1552&h=873&fit=crop&v=1463682224&auto=format&frame=1&q=92&s=eab75fb0fad787eabdf8193de93b6728\"\n                alt=\"logo\" height=\"200px\"/>\n            <Container maxWidth=\"sm\">\n                <Router>\n                    <Router history={customHistory}/>\n                    <Route exact path=\"/\" component={NewOrJoinGame}/>\n                    <Route exact path=\"/new\" render={props =>\n                        <NewGameForm  {...props} onCreate={createGame}/>\n                    }/>\n                     <Route exact path=\"/waiting\" render={props =>\n                         <div>Esperando jugadores<Players players={state.players} getCharacterInfo={getCharacterInfo}/></div>}/>\n\n                     <Route exact path=\"/join\" render={props =>\n                        <JoinForm {...props} join={joinGame}/>\n                    }/>\n\n\n                    <Route exact path=\"/newGame\" render={props =>\n                        <BeginForm  {...props} game={state.game} player={state.player} start={startGame}/>\n                    }/>\n                    <Route exact path=\"/game/character\" render={props =>\n                        <CharacterInfo  {...props} characterInfo={state.characterInfo}/>\n\n                    }/>\n\n                </Router>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}